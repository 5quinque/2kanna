name: Symfony with PostgreSQL
on: [push, pull_request]
jobs:
  symfony:
    name: Symfony
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '7.4'
          extensions: imagick, mbstring, xml, ctype, iconv, intl, pdo_sqlite, pgsql
          coverage: xdebug #optional

      - name: Setup NodeJS & Yarn
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Migration & data fixtures
        run: |
          php bin/console doctrine:schema:update --force || echo "No migrations found or schema update failed"
          php bin/console doctrine:migrations:migrate -n || echo "No migrations found or migration failed"
          php bin/console doctrine:fixtures:load -n
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

      - name: Install Yarn dependencies and CSS/JS assets
        run: |
          yarn install
          yarn encore production

      - name: Run Tests
        run: php bin/phpunit --coverage-clover coverage.xml
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)